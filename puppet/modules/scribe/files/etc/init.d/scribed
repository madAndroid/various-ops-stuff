#!/bin/sh
#
# scribed - this script starts and stops the scribed daemon
#
# chkconfig:   - 84 16 
# description:  Scribe is a server for aggregating log data \
#               streamed in real time from a large number of \
#               servers.
# processname: scribed
# config:      /etc/scribed/scribed.conf
# config:      /etc/sysconfig/scribed
# pidfile:     /var/run/scribed.pid

#set -x
#set -e

# Source function library
. /etc/init.d/functions

DESC="Scribe daemon"
RUN_BIN="/usr/sbin/scribed"
RUN_CTRL="/usr/sbin/scribe_ctrl"
NAME=$(basename $RUN_BIN)
DEFAULTS="/etc/sysconfig/$NAME"
PID_FILE="/tmp/$NAME.pid"
SUBSYS_LOCK="/var/lock/subsys/$NAME"
USER="scribe"
NICE_BIN=`which nice`
ID_BIN=`which id`
NOHUP=`which nohup`
#SCRIBED_LOG="/tmp/scribed.log"

if [ -f $DEFAULTS ]; then
    . $DEFAULTS
fi

if [ ! -f $SCRIBED_CONFIG ]; then
    echo "cannot read config file!! exiting.."
    exit 1
fi

$ID_BIN $USER 2>&1 >/dev/null
if [ $? -ne 0 ]; then
    echo "User $USER doesn't exist!! exiting.."
    exit 1
fi

PORT=$(egrep "^port=" $SCRIBED_CONFIG | awk -F"=" '{ print $2 }')

LOCKFILE=/var/lock/subsys/scribed

start() {
    echo "Starting $DESC: "

    PID=`ps u --user $USER | egrep -v bash | grep $USER | awk '{print $2}'`

    if [ $PID ]; then
        failure
        echo "$DESC is already running!! - with PID: $PID"
        exit 1
    fi

    ## Start daemon, and standard out to a file
    daemon --user $USER "$NOHUP $NICE_BIN $RUN_BIN -c $SCRIBED_CONFIG >> $SCRIBED_LOG 2>&1 >/dev/null &"
    RETVAL=$?

    sleep 1
    PID=`ps u --user $USER | egrep -v bash | grep $USER | awk '{print $2}'`
    su - $USER -c "echo $PID > $PID_FILE"

    if [ $RETVAL -eq 0 ] && [ $PID ]; then 
        success
        echo "Started $DESC successfully"
        touch $SUBSYS_LOCK
    else
        failure
        echo "failed to start $DESC!!"
        exit 1
    fi

    return $RETVAL
}

stop() {
    echo "Shutting down $DESC:"
    PID=`ps u --user $USER | egrep -v bash | grep $USER | awk '{print $2}'`
    if [ $PID ]; then
        $RUN_CTRL stop $PORT
    else
        failure
        echo "$DESC is not running"
        RETVAL=1
        return $RETVAL
    fi
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then 
        success 
        echo "Shut down $DESC with PID: $PID"
        rm -f $SUBSYS_LOCK
    else
        failure
        echo "Failed to stop $DESC!!"
        exit 1
    fi

    return $RETVAL

}

status() {
    $RUN_CTRL status $PORT

    PID=`ps u --user $USER | egrep -v bash | grep $USER | awk '{print $2}'`
    if [ $PID ]; then
        success
        echo "$DESC is running, with PID: $PID"
    else
        failure
        echo "$DESC is not running!!"
    fi

}

case $1 in
	start)
		start
		;;
	stop)
		stop
		;;
	reload)
		stop
                sleep 1
		start
		;;
	restart)
		stop
                sleep 1
		start
		;;
	status)
		status && exit 0 || exit $?
		;;
	*)
		echo "Usage: $0 {start|stop|restart|reload|status}"
		exit 1
		;;
esac

exit $RETVAL

